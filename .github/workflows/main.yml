name: 编译OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialize environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt update
        sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
        sudo -E apt -y full-upgrade
        sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E systemctl daemon-reload
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
        g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
        libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 \
        libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp \
        nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
        python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig \
        texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd

    - name: mount build-dir      #挂载build目录
      run: |
          chmod +x ./build_dir.sh
          ./build_dir.sh
        
    - name: Clone source code
      run: git clone --depth 1 $REPO_URL openwrt
      working-directory: ./build #设置工作目录

    - name: Move project
      run: mv openwrt/* .
      working-directory: ./build

    - name: Load custom configuration
      run: mv .config.bak ./build/.config

    #- name: Modify default IP      #修改默认IP(默认注释,要修改IP把这2行#去掉即可)
    #  run: sed -i 's/192.168.1.1/192.168.7.41/g' package/base-files/files/bin/config_generate
    #  working-directory: ./build

    - name: Load custom feeds
      run: mv feeds.conf.default.bak ./build/feeds.conf.default
      
    - name: Update and install feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
      working-directory: ./build
      
    - name: Use tmate connect ssh
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: false  #如果github设置了SSH keys则这里可以输入true使用密钥登录
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh != 'false') || contains(github.event.action, 'ssh')

    - name: Download packages
      run: make download -j$(($(nproc) / 2))
      working-directory: ./build

    - name: Compile firmware
      run: |
        echo -e "$(nproc) thread compile"
        make -j1 V=s || make -j1 V=s
      working-directory: ./build

    - name: Prepare artifact
      run: |
        mkdir -p ./artifact/package
        mkdir -p ./artifact/buildinfo
        find ./bin/targets/ -type d -name "packages" -exec rm -rf {} +
        find ./bin/packages/ -type f -name "*.ipk" -exec cp -f {} ./artifact/package/ \;
        find ./bin/targets/ -type f \( -name "*.buildinfo" -o -name "*.manifest" \) -exec cp -f {} ./artifact/buildinfo/ \;
      working-directory: ./build

    - name: Upload buildinfo
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_buildinfo
        path: ./artifact/buildinfo/
        working-directory: ./build

    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_package
        path: ./artifact/package/
        working-directory: ./build

    - name: Upload firmware
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_firmware
        path: ./bin/targets/
        working-directory: ./build
